<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0216.1925                               -->
<workbook source-build='10.2.0 (10200.17.0216.1925)' source-platform='mac' version='10.2' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='Calcs_0' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.2'>
      <aliases enabled='yes' />
      <column alias='A' caption='Category' datatype='integer' name='[Compare by (copy 3)]' param-domain-type='list' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <aliases>
          <alias key='1' value='A' />
          <alias key='2' value='B' />
          <alias key='3' value='C' />
        </aliases>
        <members>
          <member alias='A' value='1' />
          <member alias='B' value='2' />
          <member alias='C' value='3' />
        </members>
      </column>
      <column caption='Custom End Date' datatype='date' name='[Compare to (copy 2)]' param-domain-type='any' role='measure' type='quantitative' value='#2017-02-15#'>
        <calculation class='tableau' formula='#2017-02-15#' />
      </column>
      <column alias='Year to Date' caption='Date Compare to' datatype='integer' name='[Compare to (copy 3) 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <aliases>
          <alias key='1' value='Year to Date' />
          <alias key='2' value='Year to Week' />
          <alias key='3' value='Year to Weekday' />
          <alias key='4' value='Academic YTD' />
          <alias key='5' value='Quarter to Date' />
          <alias key='6' value='Month to Date' />
          <alias key='7' value='180Days to Previous 180Days' />
          <alias key='8' value='180Days to Prior Year 180Days' />
          <alias key='9' value='90Days to Previous 90Days' />
          <alias key='10' value='90Days to Prior Year 90Days' />
          <alias key='11' value='30Days to Previous 30Days' />
          <alias key='12' value='30Days to Prior Year 30Days' />
          <alias key='13' value='Custom Range' />
        </aliases>
        <members>
          <member alias='Year to Date' value='1' />
          <member alias='Year to Week' value='2' />
          <member alias='Year to Weekday' value='3' />
          <member alias='Academic YTD' value='4' />
          <member alias='Quarter to Date' value='5' />
          <member alias='Month to Date' value='6' />
          <member alias='180Days to Previous 180Days' value='7' />
          <member alias='180Days to Prior Year 180Days' value='8' />
          <member alias='90Days to Previous 90Days' value='9' />
          <member alias='90Days to Prior Year 90Days' value='10' />
          <member alias='30Days to Previous 30Days' value='11' />
          <member alias='30Days to Prior Year 30Days' value='12' />
          <member alias='Custom Range' value='13' />
        </members>
      </column>
      <column alias='Months' caption='Date View' datatype='integer' name='[Compare to (copy 4)]' param-domain-type='list' role='measure' type='quantitative' value='2'>
        <calculation class='tableau' formula='2' />
        <aliases>
          <alias key='1' value='Quarters' />
          <alias key='2' value='Months' />
          <alias key='3' value='Week' />
          <alias key='4' value='Day' />
        </aliases>
        <members>
          <member alias='Quarters' value='1' />
          <member alias='Months' value='2' />
          <member alias='Week' value='3' />
          <member alias='Day' value='4' />
        </members>
      </column>
      <column alias='Custom Date' caption='End Date Chooser' datatype='integer' name='[Compare to (copy) 1]' param-domain-type='list' role='measure' type='quantitative' value='4'>
        <calculation class='tableau' formula='4' />
        <aliases>
          <alias key='1' value='Today' />
          <alias key='2' value='Yesterday' />
          <alias key='3' value='Max Date' />
          <alias key='4' value='Custom Date' />
        </aliases>
        <members>
          <member alias='Today' value='1' />
          <member alias='Yesterday' value='2' />
          <member alias='Max Date' value='3' />
          <member alias='Custom Date' value='4' />
        </members>
      </column>
      <column caption='Custom Range-B End' datatype='date' name='[Current End Date (copy)]' param-domain-type='range' role='measure' type='quantitative' value='#2016-02-14#'>
        <calculation class='tableau' formula='#2016-02-14#' />
        <range />
      </column>
      <column caption='Custom Range-B Start' datatype='date' name='[Current Start Date (copy 2)]' param-domain-type='range' role='measure' type='quantitative' value='#2013-02-14#'>
        <calculation class='tableau' formula='#2013-02-14#' />
        <range />
      </column>
      <column caption='Custom Range-A End' datatype='date' name='[Current Start Date (copy)]' param-domain-type='range' role='measure' type='quantitative' value='#2017-02-15#'>
        <calculation class='tableau' formula='#2017-02-15#' />
        <range />
      </column>
      <column caption='Custom Range-A Start' datatype='date' name='[Date Chooser (copy)]' param-domain-type='range' role='measure' type='quantitative' value='#2016-02-15#'>
        <calculation class='tableau' formula='#2016-02-15#' />
        <range />
      </column>
      <column alias='LM' caption='Periods' datatype='string' name='[Date Level (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;LM&quot;'>
        <calculation class='tableau' formula='&quot;LM&quot;' />
        <aliases>
          <alias key='&quot;LM&quot;' value='LM' />
        </aliases>
        <members>
          <member alias='LM' value='&quot;LM&quot;' />
          <member value='&quot;L3M&quot;' />
          <member value='&quot;L6M&quot;' />
          <member value='&quot;LY&quot;' />
        </members>
      </column>
      <column caption='Ratio' datatype='real' name='[Parameter 1 1]' param-domain-type='any' role='measure' type='quantitative' value='90.0'>
        <calculation class='tableau' formula='90.0' />
      </column>
      <column alias='Week' caption='Date Level' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
        <calculation class='tableau' formula='&quot;week&quot;' />
        <aliases>
          <alias key='&quot;day&quot;' value='Day' />
          <alias key='&quot;month&quot;' value='Month' />
          <alias key='&quot;quarter&quot;' value='Quarter' />
          <alias key='&quot;week&quot;' value='Week' />
          <alias key='&quot;year&quot;' value='Year' />
        </aliases>
        <members>
          <member alias='Day' value='&quot;day&quot;' />
          <member alias='Week' value='&quot;week&quot;' />
          <member alias='Month' value='&quot;month&quot;' />
          <member alias='Quarter' value='&quot;quarter&quot;' />
          <member alias='Year' value='&quot;year&quot;' />
        </members>
      </column>
      <column caption='N Periods Back' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='3'>
        <calculation class='tableau' formula='3' />
        <range granularity='1' max='24' min='1' />
      </column>
      <column caption='N Months Back' datatype='integer' name='[Parameter 3 1]' param-domain-type='list' role='measure' type='quantitative' value='12'>
        <calculation class='tableau' formula='12' />
        <members>
          <member value='1' />
          <member value='2' />
          <member value='3' />
          <member value='6' />
          <member value='12' />
          <member value='18' />
        </members>
      </column>
      <column alias='Sales' caption='Metric' datatype='integer' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <aliases>
          <alias key='1' value='Sales' />
          <alias key='2' value='Profit' />
        </aliases>
        <members>
          <member alias='Sales' value='1' />
          <member alias='Profit' value='2' />
        </members>
      </column>
      <folder name='Date' role='parameters'>
        <folder-item name='[Date Level (copy)]' type='field' />
        <folder-item name='[Parameter 1]' type='field' />
        <folder-item name='[Parameter 2]' type='field' />
        <folder-item name='[Parameter 3 1]' type='field' />
      </folder>
      <folder name='Date Selector' role='parameters'>
        <folder-item name='[Compare to (copy 2)]' type='field' />
        <folder-item name='[Compare to (copy 3) 1]' type='field' />
        <folder-item name='[Compare to (copy 4)]' type='field' />
        <folder-item name='[Compare to (copy) 1]' type='field' />
        <folder-item name='[Current End Date (copy)]' type='field' />
        <folder-item name='[Current Start Date (copy 2)]' type='field' />
        <folder-item name='[Current Start Date (copy)]' type='field' />
        <folder-item name='[Date Chooser (copy)]' type='field' />
      </folder>
      <folder name='HexbinMap' role='parameters'>
        <folder-item name='[Parameter 1 1]' type='field' />
      </folder>
    </datasource>
    <datasource caption='Calc' inline='true' name='federated.19qtmxc1wwopz61d4p2j00eyie3e' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Calc Datasource' name='excel-direct.0v2wix50wu8a5q1bq9ucq1ypjj2o'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/amonzon/Google Drive/Calc Datasource.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0v2wix50wu8a5q1bq9ucq1ypjj2o' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:G3:no:A1:G3:0' header='yes' outcome='6'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='String' ordinal='1' />
            <column datatype='string' name='StringB' ordinal='2' />
            <column datatype='integer' name='Measure' ordinal='3' />
            <column datatype='real' name='Latitude' ordinal='4' />
            <column datatype='real' name='Longitude' ordinal='5' />
            <column datatype='string' name='Row Type' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>String</remote-name>
            <remote-type>130</remote-type>
            <local-name>[String]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>String</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StringB</remote-name>
            <remote-type>130</remote-type>
            <local-name>[StringB]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>StringB</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measure</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Measure]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Measure</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Row Type]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Row Type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G3:no:A1:G3:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' caption='dayOfYearDate' datatype='integer' name='[Calculation_1083397250226696196]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEPART(&apos;dayofyear&apos;, [Date])' />
        <desc>
          <formatted-text>
            <run>Returns the numerical Day of Year&#10;&#10;DATETRUNC(&apos;month&apos;, [Date])</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='datePartMonthDate' datatype='integer' name='[Calculation_1083397250236698629]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEPART(&apos;month&apos;, [Date])' />
        <desc>
          <formatted-text>
            <run>Date Part Month returns the Numerical Value of the Month&#10;&#10;DATEPART(&apos;month&apos;, [Date])</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='dateTruncYearDate' datatype='datetime' name='[Calculation_1083397250250821638]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATETRUNC(&apos;year&apos;, [Date])' />
        <desc>
          <formatted-text>
            <run>Truncates the date to the Accuracy of Year&#10;&#10;DATETRUNC(&apos;year&apos;, [Date])</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='MTD-PMTD-PYTD Fitler' datatype='boolean' name='[Calculation_1083397250400686089]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATETRUNC(&apos;month&apos;, [Date]) &lt;= DATETRUNC(&apos;month&apos;, TODAY()) //Optional. Ex WB containts Dates passed Today&#13;&#10;AND&#13;&#10;(&#13;&#10;    //Current Month and Previous Month&#13;&#10;    DATETRUNC(&apos;month&apos;, [Date]) &gt;= DATEADD(&apos;month&apos;, -1, DATETRUNC(&apos;month&apos;, TODAY())) //Current Month and Previous Month&#13;&#10;    OR&#13;&#10;    //Current Month in Previous Year&#13;&#10;    DATETRUNC(&apos;month&apos;, [Date]) = DATEADD(&apos;year&apos;, -1, DATETRUNC(&apos;month&apos;, TODAY())) &#13;&#10;)&#13;&#10;&#13;&#10;AND&#13;&#10;&#13;&#10;(&#13;&#10;    TODAY() =  DATEADD(&apos;day&apos;, -1, DATEADD(&apos;month&apos;, 1, DATETRUNC(&apos;month&apos;,TODAY()))) //Last day of Month&#13;&#10;    OR&#13;&#10;    DAY([Date]) &lt;= DAY(TODAY()) //IF TODAY is not the last day of the month, return MTD&#13;&#10;)' />
        <desc>
          <formatted-text>
            <run>Boolean Filter - True returns the current month, previous month and current month in previous year, and exlcudes all days of the month the exceed the current day in the current month.&#10;&#10;(&#10;    //Current Month and Previous Month&#10;    DATETRUNC(&apos;month&apos;, [Date]) &gt;= DATEADD(&apos;month&apos;, -1, DATETRUNC(&apos;month&apos;, TODAY())) //Current Month and Previous Month&#10;    OR&#10;    //Current Month in Previous Year&#10;    DATETRUNC(&apos;month&apos;, [Date]) = DATEADD(&apos;year&apos;, -1, DATETRUNC(&apos;month&apos;, TODAY())) &#10;)&#10;&#10;AND&#10;&#10;(&#10;    TODAY() =  DATEADD(&apos;day&apos;, -1, DATEADD(&apos;month&apos;, 1, DATETRUNC(&apos;month&apos;,TODAY()))) //Last day of Month&#10;    OR&#10;    DAY([Date]) &lt;= DAY(TODAY()) //IF TODAY is not the last day of the month, return MTD&#10;)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Period Comparison Tooltip' datatype='string' name='[Calculation_1083397250402594826]' role='measure' type='nominal'>
        <calculation class='tableau' formula='&apos;Comparitive Days &apos; + STR(MIN(DAY([Date]))) + &apos; to &apos;  + STR(MAX(DAY([Date])))' />
        <desc>
          <formatted-text>
            <run>&apos;Comparitive Days &apos; + STR(MIN(DAY([Date]))) + &apos; to &apos;  + STR(MAX(DAY([Date])))</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='monthToDateOverTimeFilter' datatype='boolean' name='[Calculation_1083397250404327436]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATETRUNC(&apos;month&apos;, [Date]) &lt;= DATETRUNC(&apos;month&apos;, TODAY()) //Optional Ex WB contatins dates passed today&#13;&#10;AND&#13;&#10;(&#13;&#10;    TODAY() = DATEADD(&apos;day&apos;, -1, DATEADD(&apos;month&apos;, 1 ,DATETRUNC(&apos;month&apos;, TODAY())))&#13;&#10;    OR&#13;&#10;    DAY([Date]) &lt;= DAY(TODAY())&#13;&#10;)' />
        <desc>
          <formatted-text>
            <run>Boolean Filter - Looks to see if Today is the last day in the current month and returns all days in month, else it returns all Day equal to/or prior to the current day of month&#10;&#10;TODAY() = DATEADD(&apos;day&apos;, -1, DATEADD(&apos;month&apos;, 1 ,DATETRUNC(&apos;month&apos;, TODAY())))&#10;OR&#10;DAY([Date]) &lt;= DAY(TODAY())</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='dateTruncMonthDate' datatype='datetime' name='[Calculation_1083397250405617678]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATETRUNC(&apos;month&apos;, [Date])' />
        <desc>
          <formatted-text>
            <run>Truncates the Date to the accuracy of Month and Year&#10;&#10;DATETRUNC(&apos;month&apos;, [Date])</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='variable Date Comparison Filter' datatype='boolean' name='[Calculation_1083397250409349135]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATETRUNC(&apos;month&apos;, [Date]) &lt;= DATETRUNC(&apos;month&apos;, TODAY()) //Optional Ex WB contatins dates passed today&#13;&#10;AND&#13;&#10;(&#13;&#10;    DATETRUNC([Parameters].[Parameter 1], [Date]) = DATETRUNC([Parameters].[Parameter 1], TODAY()) //Current Period&#13;&#10;    OR&#13;&#10;    (   //Comparison Period&#13;&#10;        DATETRUNC([Parameters].[Parameter 1], [Date]) = DATEADD([Parameters].[Parameter 1], -[Parameters].[Parameter 2], DATETRUNC([Parameters].[Parameter 1], TODAY()))&#13;&#10;        AND&#13;&#10;        (   //Check if last day in period, or grab period to date&#13;&#10;            TODAY() = DATEADD(&apos;day&apos;, -1, DATEADD([Parameters].[Parameter 1], 1 ,DATETRUNC([Parameters].[Parameter 1], TODAY())))&#13;&#10;            OR&#13;&#10;            DATETRUNC(&apos;day&apos;, [Date]) &lt;= DATEADD([Parameters].[Parameter 1], -[Parameters].[Parameter 2], TODAY())&#13;&#10;        )&#13;&#10;    )&#13;&#10;)' />
        <desc>
          <formatted-text>
            <run>Boolean Filter - True returns the Datetrunc of the Current Period, as determined by the [Date Level] parameter, And the Datetrunc of a variable period as determined by the [Date Level] Parameter and the [N Months Back] parameter&#10;&#10;(&#10;    DATETRUNC([Date Level], [Date]) = DATETRUNC([Date Level], TODAY()) //Current Period&#10;    OR&#10;    (   //Comparison Period&#10;        DATETRUNC([Date Level], [Date]) = DATEADD([Date Level], -[N Periods Back], DATETRUNC([Date Level], TODAY()))&#10;        AND&#10;        (   //Check if last day in period, or grab period to date&#10;            TODAY() = DATEADD(&apos;day&apos;, -1, DATEADD([Date Level], 1 ,DATETRUNC([Date Level], TODAY())))&#10;            OR&#10;            DATETRUNC(&apos;day&apos;, [Date]) &lt;= DATEADD([Date Level], -[N Periods Back], TODAY())&#10;        )&#10;    )&#10;)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='minAndMaxDates' datatype='string' name='[Calculation_1083397250411323409]' role='measure' type='nominal'>
        <calculation class='tableau' formula='STR(MIN([Date])) + &apos; to &apos; + STR(MAX([Date]))' />
        <desc>
          <formatted-text>
            <run>Retruns the Min and Max Date of the Current Partition on the canvas&#10;&#10;STR(MIN([Date])) + &apos; to &apos; + STR(MAX([Date]))</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='NMonthsBackFilter' datatype='boolean' name='[Calculation_1083397250419925010]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATETRUNC(&apos;month&apos;, [Date]) &lt;= DATETRUNC(&apos;month&apos;, TODAY()) //Optional Ex WB contatins dates passed today&#13;&#10;AND&#13;&#10;DATETRUNC(&apos;month&apos;, [Date]) &gt;= DATEADD(&apos;month&apos;, -[Parameters].[Parameter 3 1], DATETRUNC(&apos;month&apos;, TODAY()))' />
        <desc>
          <formatted-text>
            <run>Boolean Filter - True returns the current month and N Months back according to the[ N Months Back] Parameter&#10;&#10;DATETRUNC(&apos;month&apos;, [Date]) &gt;= DATEADD(&apos;month&apos;, -[N Months Back], DATETRUNC(&apos;month&apos;, TODAY()))</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Today()' datatype='date' name='[Calculation_1083397250571366419]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='TODAY()' />
        <desc>
          <formatted-text>
            <run>Retruns the Current Day as determined by Default System Settings&#10;&#10;TODAY()</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='TODAY()MinusOneDay' datatype='datetime' name='[Calculation_1083397250571407380]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEADD(&apos;day&apos;, -1, TODAY())' />
        <desc>
          <formatted-text>
            <run>Retruns Yesterday as determined by the Default System Settings&#10;&#10;DATEADD(&apos;day&apos;, -1, TODAY())</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='TODAY()MinusOneMonth' datatype='datetime' name='[Calculation_1083397250571546645]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEADD(&apos;month&apos;, -1, TODAY())' />
        <desc>
          <formatted-text>
            <run>Returns Today minus one month as determined by the defautlt systems settings&#10;&#10;DATEADD(&apos;month&apos;, -1, TODAY())</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='fixedMaxDateinData' datatype='date' name='[Calculation_1083397250573553686]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ MAX([Date]) }' />
        <desc>
          <formatted-text>
            <run>Fixed LoD - Returns the Max Date in the Dataset&#10;&#10;{ MAX([Date]) }</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='explicitEndDate' datatype='date' name='[Calculation_1083397250574790679]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='#2015-01-01#' />
        <desc>
          <formatted-text>
            <run>Explicityly typed Date &#10;&#10;#2015-01-01#</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='endOfMonthDayOfYearNumeric' datatype='integer' name='[Calculation_1083397250729541659]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEPART(&apos;dayofyear&apos;, DATEADD(&apos;day&apos;, -1, DATEADD(&apos;month&apos;, 1, DATETRUNC(&apos;month&apos;, [Date])))) + 1' />
        <desc>
          <formatted-text>
            <run>&#10;DATEPART(&apos;dayofyear&apos;, DATEADD(&apos;day&apos;, -1, DATEADD(&apos;month&apos;, 1, DATETRUNC(&apos;month&apos;, [Date])))) + 1</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='first100DaysOfYear' datatype='boolean' name='[Calculation_1083397250746245148]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1083397250226696196] &lt;= 100' />
        <desc>
          <formatted-text>
            <run>Boolean Filter - True returns first 100 days of year&#10;&#10;[dayOfYearDate] &lt;= 100</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='ToPad' datatype='integer' name='[Calculation_1150177182295941123]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Row Type]==&apos;Real&apos; THEN 1 &#10;ELSE 99&#10;END' />
        <desc>
          <formatted-text>
            <run>IF [Row Type]==&apos;Real&apos; THEN 1 &#10;ELSE 99&#10;END</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='t' datatype='real' name='[Calculation_1150177182296424452]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(index()-25)/4'>
          <table-calc ordering-type='Rows' />
        </calculation>
        <desc>
          <formatted-text>
            <run>Used with [To Pad]&#10;&#10;(index()-25)/4</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Rank 1' datatype='real' name='[Calculation_1150177182297370629]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(sum([Number of Records]))/TOTAL(sum([Number of Records]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
        <desc>
          <formatted-text>
            <run>Will show data at the right points vertically&#10;&#10;RUNNING_SUM(sum([Number of Records]))/TOTAL(sum([Number of Records]))</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Rank 2' datatype='real' name='[Calculation_1150177182297473030]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(sum([Number of Records]))/TOTAL(sum([Number of Records]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
        <desc>
          <formatted-text>
            <run>Will show data at the right points vertically&#10;&#10;RUNNING_SUM(sum([Number of Records]))/TOTAL(sum([Number of Records]))</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Sigmoid' datatype='real' name='[Calculation_1150177182297591815]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1/(1+EXP(1)^-[Calculation_1150177182296424452])'>
          <table-calc ordering-type='Rows' />
        </calculation>
        <desc>
          <formatted-text>
            <run>Sigmoid fuction - gives the curve&#10;&#10;1/(1+EXP(1)^-[t])</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Curve' datatype='real' name='[Calculation_1150177182297722888]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1150177182297370629]+(([Calculation_1150177182297473030] - [Calculation_1150177182297370629])*[Calculation_1150177182297591815])'>
          <table-calc ordering-type='Rows' />
        </calculation>
        <desc>
          <formatted-text>
            <run>Curve&#10;&#10;[Rank 1]+(([Rank 2] - [Rank 1])*[Sigmoid])</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Size' datatype='real' name='[Calculation_1150177182302507017]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_AVG(SUM([Number of Records]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
        <desc>
          <formatted-text>
            <run>Vary lines by size based on measure selected&#10;&#10;RUNNING_AVG(SUM([Number of Records]))</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Fiscal Year' datatype='integer' name='[Calculation_1336935776517423126]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='//Enter number to change start of year&#10;//-6 July&#10;DATEPART(&apos;year&apos;,DATEADD(&apos;month&apos;,-6,[Date]))' />
      </column>
      <column caption='Donut-Placeholder' datatype='integer' name='[Calculation_1744159760397631523]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MIN(0)' />
        <desc>
          <formatted-text>
            <run>To create donut pie chart&#10;Place pill on rows twice - dual axis&#10;&#10;MIN(0)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Hierarchy Display' datatype='string' name='[Calculation_178807042948841482]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='//Filters must use context to work&#10;&#10;IF {FIXED :COUNTD([Hierarchy Level 1 (copy)])} = 1 THEN [Hierarchy Level 2 (copy)]&#10;ELSEIF {FIXED :COUNTD([Calculation_831758618066178052])} = 1 THEN [Hierarchy Level 1 (copy)]&#10;ELSE [Calculation_831758618066178052]&#10;END' />
        <desc>
          <formatted-text>
            <run>Dynamically display level 1,2,3 level of hierarchy based on number of items selected&#10;&#10;//Filters must use context to work&#10;&#10;IF {FIXED :COUNTD([Hierarchy Level 2])} = 1 THEN [Hierarchy Level 3]&#10;ELSEIF {FIXED :COUNTD([Hierarchy Level 1])} = 1 THEN [Hierarchy Level 2]&#10;ELSE [Hierarchy Level 1]&#10;END</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='jitter' datatype='integer' name='[Calculation_213921040633380872]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX() %75'>
          <table-calc ordering-type='Rows' />
        </calculation>
        <desc>
          <formatted-text>
            <run>Used to spread on condensed set of marks (such as box plot)&#10;&#10;INDEX() %75</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Month / Day / CY' datatype='date' name='[Calculation_245586981527650304]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='DATE(STR(MONTH([Date]))+&quot;/&quot;+STR(DAY([Date]))+&quot;/&quot;+STR(YEAR([Calculation_831758618031783937])) )' />
        <desc>
          <formatted-text>
            <run>Returns date as continious&#10;&#10;DATE(STR(MONTH([Date]))+&quot;/&quot;+STR(DAY([Date]))+&quot;/&quot;+STR(YEAR([End Date Chooser])) )</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Date View' datatype='date' name='[Calculation_254242336720187392]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Compare to (copy 4)]&#10;WHEN 1 THEN [Month / Day / CY (Quarters)]&#10;WHEN 2 THEN [Month / Day / CY (Months)]&#10;WHEN 3 THEN [Month / Day / CY (Week numbers)]&#10;WHEN 4 THEN [Month / Day / CY (Days)]&#10;END' />
        <desc>
          <formatted-text>
            <run>Let user select date aggregation on time series line chart&#10;&#10;CASE [Parameters].[Date View]&#10;WHEN 1 THEN [Month / Day / CY (Quarters)]&#10;WHEN 2 THEN [Month / Day / CY (Months)]&#10;WHEN 3 THEN [Month / Day / CY (Week numbers)]&#10;WHEN 4 THEN [Month / Day / CY (Days)]&#10;END</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='dateLevelDateTruncDate' datatype='datetime' name='[Calculation_279223240556945408]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATETRUNC([Parameters].[Parameter 1], [Date])' />
        <desc>
          <formatted-text>
            <run>Returns the Datetrunc to the accuracy of the [Date Level] Parameter DatePart&#10;&#10;DATETRUNC([Date Level], [Date])</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='currentEndOfMonthDate' datatype='datetime' name='[Calculation_279223240558645253]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEADD(&apos;day&apos;, -1, DATEADD(&apos;month&apos;, 1, DATETRUNC(&apos;month&apos;, TODAY())))' />
        <desc>
          <formatted-text>
            <run>Returns the Last Day of the Current Month&#10;&#10;DATEADD(&apos;day&apos;, -1, DATEADD(&apos;month&apos;, 1, DATETRUNC(&apos;month&apos;, TODAY())))</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='currentMonth' datatype='boolean' name='[Calculation_279223240561987592]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='MONTH([Date]) = MONTH(TODAY())' />
        <desc>
          <formatted-text>
            <run>Boolean Filter - True returns the Current Month&#10;&#10;DATEADD(&apos;day&apos;, -1, DATEADD(&apos;month&apos;, 1, DATETRUNC(&apos;month&apos;, TODAY())))</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Periods to Date Filter' datatype='boolean' name='[Calculation_295408053817495552]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='(&#10;    (&#10;        [Parameters].[Date Level (copy)] = &apos;LM&apos;&#10;        AND MONTH([Date]) &gt;= (MONTH(Today()) - 1)&#10;    )&#10;    OR&#10;    (   &#10;        [Parameters].[Date Level (copy)] = &apos;L3M&apos;&#10;        AND MONTH([Date]) &gt;= (MONTH(Today()) - 2)&#10;    )&#10;    OR&#10;    (   &#10;        [Parameters].[Date Level (copy)] = &apos;L6M&apos;&#10;        AND MONTH([Date]) &gt;= (MONTH(Today()) - 5)&#10;    )&#10;)&#10;AND&#10;YEAR([Date]) &gt;= (YEAR(Today()) - 1)' />
        <desc>
          <formatted-text>
            <run>Boolean Filter - True returns date based on user selection of Period-LM, L3M, L6M, LY&#10;&#10;(&#10;    (&#10;        [Periods] = &apos;LM&apos;&#10;        AND MONTH([Date]) &gt;= (MONTH(Today()) - 1)&#10;    )&#10;    OR&#10;    (   &#10;        [Periods] = &apos;L3M&apos;&#10;        AND MONTH([Date]) &gt;= (MONTH(Today()) - 2)&#10;    )&#10;    OR&#10;    (   &#10;        [Periods] = &apos;L6M&apos;&#10;        AND MONTH([Date]) &gt;= (MONTH(Today()) - 5)&#10;    )&#10;)&#10;AND&#10;YEAR([Date]) &gt;= (YEAR(Today()) - 1)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='convertDatePartToStringDates' datatype='string' name='[Calculation_295408053821296641]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='//Keep logical date order and see Jan, Feb OR Week 1, Week 2 OR year&#10;IF [Parameters].[Parameter 1] == &apos;month&apos;&#10;    THEN DATENAME(&apos;month&apos;, [Date])&#10;ELSEIF [Parameters].[Parameter 1] == &apos;week&apos;&#10;    THEN &apos;Week &apos; + DATENAME(&apos;week&apos;, [Date])&#10;ELSE STR(DATEPART([Parameters].[Parameter 1], [Date]))&#10;END' />
        <desc>
          <formatted-text>
            <run>Returns date as string function keeping the logical order for month, week, year&#10;&#10;IF [Date Level] == &apos;month&apos;&#10;    THEN DATENAME(&apos;month&apos;, [Date])&#10;ELSEIF [Date Level] == &apos;week&apos;&#10;    THEN &apos;Week &apos; + DATENAME(&apos;week&apos;, [Date])&#10;ELSE STR(DATEPART([Date Level], [Date]))&#10;END</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Date Compare by' datatype='integer' name='[Calculation_321444487060287492]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [Parameters].[Compare to (copy 3) 1]&#10;&#10;//YTD&#10;//Year To Date&#10;WHEN 1 THEN&#10;    //We check every date in our view and see it would come before our selected date in a calendar year&#10;    //If it does then we pass it to the case statement below if not we exit out and it is null&#10;    IF DATEPART(&apos;dayofyear&apos;,[Date]) &lt;= DATEPART(&apos;dayofyear&apos;,[Calculation_831758618031783937]) THEN&#10;        // The case statement determines if the date is in the same year or the previous year. Any other years are null.&#10;        CASE YEAR([Date]) - YEAR([Calculation_831758618031783937])&#10;        WHEN 0 THEN 0&#10;        WHEN -1 THEN -1&#10;        END&#10;    END&#10;&#10;&#10;//Rolling Period&#10;//Year to Week&#10;WHEN 2 THEN&#10;    //The first statement sets the conditions for a date to be considered the “current period.” &#10;    //It will check every date to the date we&apos;ve chosen as our starting point.&#10;    //It must be based on whatever date we’ve chosen and go back a user chosen number of months, weeks, days, etc.&#10;    //If the difference between these dates is &gt;=0 and &lt; our Period Length, we consider it to be the “current period.”&#10;    IF DATEDIFF(&apos;week&apos;,[Date],[Calculation_831758618031783937]) &gt;=0 &#10;        AND DATEDIFF(&apos;week&apos;,[Date],[Calculation_831758618031783937])&lt; 52&#10;        THEN 0&#10;    //The second statement sets the conditions for a date to be considered the “previous period.” &#10;    //It will compare every date to the date we&apos;ve chosen as our starting point.&#10;    //It will be based on whatever date we&apos;ve chosen and it will immediately precede the “current period” and be the same length.&#10;    //If the difference between the dates is &gt; the Period Length but also &lt; two times the length, it will be the “previous period.”&#10;    ELSEIF DATEDIFF(&apos;week&apos;,[Date],[Calculation_831758618031783937]) &gt;= 52&#10;        AND DATEDIFF(&apos;week&apos;,[Date],[Calculation_831758618031783937]) &lt; 2*52&#10;        THEN -1&#10;    END&#10;&#10;&#10;//Rolling Period&#10;//Year to Day-Today&#10;WHEN 3 THEN&#10;    //The first statement sets the conditions for a date to be considered the “current period.” &#10;    //It will check every date to the date we&apos;ve chosen as our starting point.&#10;    //It must be based on whatever date we’ve chosen and go back a user chosen number of months, weeks, days, etc.&#10;    //If the difference between these dates is &gt;=0 and &lt; our Period Length, we consider it to be the “current period.”&#10;    IF DATEDIFF(&apos;day&apos;,[Date],[Calculation_831758618031783937]) &gt;=0 &#10;        AND DATEDIFF(&apos;day&apos;,[Date],[Calculation_831758618031783937])&lt; 365&#10;        THEN 0&#10;    //The second statement sets the conditions for a date to be considered the “previous period.” &#10;    //It will compare every date to the date we&apos;ve chosen as our starting point.&#10;    //It will be based on whatever date we&apos;ve chosen and it will immediately precede the “current period” and be the same length.&#10;    //If the difference between the dates is &gt; the Period Length but also &lt; two times the length, it will be the “previous period.”&#10;    ELSEIF DATEDIFF(&apos;day&apos;,[Date],[Calculation_831758618031783937]) &gt;= 365&#10;        AND DATEDIFF(&apos;day&apos;,[Date],[Calculation_831758618031783937]) &lt; 2*365&#10;        THEN -1&#10;    END&#10;&#10;&#10;//Academic YTD&#10;//July start&#10;WHEN 4 THEN&#10;    //Current&#10;    IF [Date] &lt;= [Calculation_831758618031783937]&#10;        AND DATEDIFF(&apos;year&apos;, MAKEDATE(DATEPART(&apos;year&apos;,DATEADD(&apos;month&apos;,-6,[Date])), 1, 1), MAKEDATE(DATEPART(&apos;year&apos;,DATEADD(&apos;month&apos;,-6,[Calculation_831758618031783937])), 1, 1)) = 0&#10;        THEN 0&#10;    //Previous&#10;    ELSEIF DATEDIFF(&apos;year&apos;, MAKEDATE(DATEPART(&apos;year&apos;,DATEADD(&apos;month&apos;,-6,[Date])), 1, 1), MAKEDATE(DATEPART(&apos;year&apos;,DATEADD(&apos;month&apos;,-6,[Calculation_831758618031783937])), 1, 1)) = 1&#10;        //Additional logic for to date&#10;    AND (IF 7 = 1 THEN datepart(&apos;month&apos;,[Date])&#10;            ELSEIF 7 &gt; datepart(&apos;month&apos;,[Date]) THEN 12 - (7 - datepart(&apos;month&apos;,[Date]) - 1)&#10;            ELSEIF 7 &lt;= datepart(&apos;month&apos;,[Date]) THEN datepart(&apos;month&apos;,[Date]) - 7 + 1&#10;            END &#10;                * 100 + datepart(&apos;day&apos;,[Date])) &#10;        &lt;= &#10;            (IF 7 = 1 THEN datepart(&apos;month&apos;,[Calculation_831758618031783937])&#10;            ELSEIF 7 &gt; datepart(&apos;month&apos;,[Calculation_831758618031783937]) THEN 12 - (7 - datepart(&apos;month&apos;,[Calculation_831758618031783937]) - 1)&#10;            ELSEIF 7 &lt;= datepart(&apos;month&apos;,[Calculation_831758618031783937]) THEN datepart(&apos;month&apos;,[Calculation_831758618031783937]) - 7 + 1&#10;            END &#10;                * 100 + datepart(&apos;day&apos;,[Calculation_831758618031783937]))&#10;        THEN -1&#10;    END&#10;&#10;&#10;//Quarter to Date&#10;WHEN 5 THEN&#10;    //Current&#10;    IF [Date] &lt;= [Calculation_831758618031783937]&#10;        AND DATEDIFF(&apos;quarter&apos;,[Date],[Calculation_831758618031783937])= 0 THEN 0&#10;    //Previous&#10;    ELSEIF  INT(DATENAME(&apos;dayofyear&apos;,[Date])) &lt;= INT(DATENAME(&apos;dayofyear&apos;,[Calculation_831758618031783937]))&#10;        AND DATEDIFF(&apos;quarter&apos;,[Date],[Calculation_831758618031783937]) = 4 &#10;        THEN -1&#10;    END&#10;&#10;&#10;//Month to Date&#10;WHEN 6 THEN&#10;    //Current&#10;    IF [Date] &lt;= [Calculation_831758618031783937]&#10;        AND DATEDIFF(&apos;month&apos;,[Date],[Calculation_831758618031783937])= 0 THEN 0&#10;    //Previous&#10;    ELSEIF DAY([Date]) &lt;= DAY([Calculation_831758618031783937])&#10;        AND DATEDIFF(&apos;month&apos;,[Date],[Calculation_831758618031783937])= 1 THEN -1&#10;    END&#10;&#10;&#10;//180Days to Previous 180Days&#10;WHEN 7 THEN&#10;    //The first statement sets the conditions for a date to be considered the “current period.” &#10;    //It will check every date to the date we&apos;ve chosen as our starting point.&#10;    //It must be based on whatever date we’ve chosen and go back a user chosen number of months, weeks, days, etc.&#10;    //If the difference between these dates is &gt;=0 and &lt; our Period Length, we consider it to be the “current period.”&#10;    IF DATEDIFF(&apos;day&apos;,[Date],[Calculation_831758618031783937]) &gt;=0 &#10;        AND DATEDIFF(&apos;day&apos;,[Date],[Calculation_831758618031783937])&lt; 181&#10;        THEN 0&#10;    //The second statement sets the conditions for a date to be considered the “previous period.” &#10;    //It will compare every date to the date we&apos;ve chosen as our starting point.&#10;    //It will be based on whatever date we&apos;ve chosen and it will immediately precede the “current period” and be the same length.&#10;    //If the difference between the dates is &gt; the Period Length but also &lt; two times the length, it will be the “previous period.”&#10;    ELSEIF DATEDIFF(&apos;day&apos;,[Date],[Calculation_831758618031783937]) &gt;= 181&#10;        AND DATEDIFF(&apos;day&apos;,[Date],[Calculation_831758618031783937]) &lt; 2*181&#10;        THEN -1&#10;    END&#10;&#10;//180Days to Prior Year 180Days&#10;WHEN 8 THEN&#10;    //Current&#10;    If [Date] &gt;= [Calculation_831758618031783937]-180 AND [Date] &lt;= [Calculation_831758618031783937] THEN 0&#10;    //Previous&#10;    ELSEIF [Date] &gt; DATEADD(&apos;year&apos;,-1, [Calculation_831758618031783937])-180 AND [Date] &lt;= DATEADD(&apos;year&apos;,-1, [Calculation_831758618031783937]) THEN -1&#10;    END&#10;&#10;&#10;&#10;//90Days to Previous 90Days&#10;WHEN 9 THEN&#10;    //The first statement sets the conditions for a date to be considered the “current period.” &#10;    //It will check every date to the date we&apos;ve chosen as our starting point.&#10;    //It must be based on whatever date we’ve chosen and go back a user chosen number of months, weeks, days, etc.&#10;    //If the difference between these dates is &gt;=0 and &lt; our Period Length, we consider it to be the “current period.”&#10;    IF DATEDIFF(&apos;day&apos;,[Date],[Calculation_831758618031783937]) &gt;=0 &#10;        AND DATEDIFF(&apos;day&apos;,[Date],[Calculation_831758618031783937])&lt; 91&#10;        THEN 0&#10;    //The second statement sets the conditions for a date to be considered the “previous period.” &#10;    //It will compare every date to the date we&apos;ve chosen as our starting point.&#10;    //It will be based on whatever date we&apos;ve chosen and it will immediately precede the “current period” and be the same length.&#10;    //If the difference between the dates is &gt; the Period Length but also &lt; two times the length, it will be the “previous period.”&#10;    ELSEIF DATEDIFF(&apos;day&apos;,[Date],[Calculation_831758618031783937]) &gt;= 91&#10;        AND DATEDIFF(&apos;day&apos;,[Date],[Calculation_831758618031783937]) &lt; 2*91&#10;        THEN -1&#10;    END&#10;&#10;//90Days to Prior Year 90Days&#10;WHEN 10 THEN&#10;    //Current&#10;    If [Date] &gt;= [Calculation_831758618031783937]-90 AND [Date] &lt;= [Calculation_831758618031783937] THEN 0&#10;    //Previous&#10;    ELSEIF [Date] &gt; DATEADD(&apos;year&apos;,-1, [Calculation_831758618031783937])-90 AND [Date] &lt;= DATEADD(&apos;year&apos;,-1, [Calculation_831758618031783937]) THEN -1&#10;    END&#10;&#10;&#10;&#10;//30Days to Previous 30Days&#10;WHEN 11 THEN&#10;    //The first statement sets the conditions for a date to be considered the “current period.” &#10;    //It will check every date to the date we&apos;ve chosen as our starting point.&#10;    //It must be based on whatever date we’ve chosen and go back a user chosen number of months, weeks, days, etc.&#10;    //If the difference between these dates is &gt;=0 and &lt; our Period Length, we consider it to be the “current period.”&#10;    IF DATEDIFF(&apos;day&apos;,[Date],[Calculation_831758618031783937]) &gt;=0 &#10;        AND DATEDIFF(&apos;day&apos;,[Date],[Calculation_831758618031783937])&lt; 30&#10;        THEN 0&#10;    //The second statement sets the conditions for a date to be considered the “previous period.” &#10;    //It will compare every date to the date we&apos;ve chosen as our starting point.&#10;    //It will be based on whatever date we&apos;ve chosen and it will immediately precede the “current period” and be the same length.&#10;    //If the difference between the dates is &gt; the Period Length but also &lt; two times the length, it will be the “previous period.”&#10;    ELSEIF DATEDIFF(&apos;day&apos;,[Date],[Calculation_831758618031783937]) &gt;= 30&#10;        AND DATEDIFF(&apos;day&apos;,[Date],[Calculation_831758618031783937]) &lt; 2*30&#10;        THEN -1&#10;    END&#10;&#10;//30Days to Prior Year 30Days&#10;WHEN 12 THEN&#10;    //Current&#10;    IF [Date] &gt;= [Calculation_831758618031783937]-30 AND [Date] &lt;= [Calculation_831758618031783937] THEN 0&#10;    //Previous&#10;    ELSEIF [Date] &gt; DATEADD(&apos;year&apos;,-1, [Calculation_831758618031783937])-30 AND [Date] &lt;= DATEADD(&apos;year&apos;,-1, [Calculation_831758618031783937]) THEN -1&#10;    END&#10;&#10;&#10;&#10;//Custom Date Rate&#10;WHEN 13 THEN&#10;    //Current&#10;    IF [Parameters].[Date Chooser (copy)] &lt;= [Date] AND [Parameters].[Current Start Date (copy)] &gt;= [Date] THEN 0&#10;    //Previous&#10;    ELSEIF [Parameters].[Current Start Date (copy 2)] &lt;= [Date] AND [Parameters].[Current End Date (copy)] &gt;= [Date] THEN -1&#10;    END&#10;&#10;&#10;END' />
        <aliases>
          <alias key='-1' value='Previous' />
          <alias key='0' value='Current' />
        </aliases>
        <desc>
          <formatted-text>
            <run>Use this as a filer in chart to get the 0 = &apos;Current&apos; &amp; -1 = &apos;Previous&apos; period based on user selection of parameter</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Category' datatype='string' name='[Calculation_480548215495065601]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Compare by (copy 3)]&#10;WHEN 1 THEN [String]&#10;WHEN 2 THEN [String]&#10;WHEN 3 THEN [String]&#10;END' />
        <desc>
          <formatted-text>
            <run>CASE [Parameters].[Category]&#10;WHEN 1 THEN [String]&#10;WHEN 2 THEN [String]&#10;WHEN 3 THEN [String]&#10;END</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Leftmost Integer' datatype='string' name='[Calculation_544161563453112321]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='LEFT(STR(ZN([Calculation_544161563453747202])), 1 )' />
        <desc>
          <formatted-text>
            <run>Returns the first integer&#10;&#10;LEFT(STR(ZN([Metric])), 1 )</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Metric' datatype='integer' name='[Calculation_544161563453747202]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Case [Parameters].[Parameter 3]&#10;WHEN 1 THEN [Measure]&#10;WHEN 2 THEN [Measure]&#10;END' />
        <desc>
          <formatted-text>
            <run>Case [Parameters].[Metric]&#10;WHEN 1 THEN [Measure]&#10;WHEN 2 THEN [Measure]&#10;END</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Benfords Law' datatype='real' name='[Calculation_544161563454058499]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='LOG(INT([Calculation_544161563453112321])+1)-LOG(INT([Calculation_544161563453112321]))' />
        <desc>
          <formatted-text>
            <run>LOG(INT([Leftmost Integer])+1)-LOG(INT([Leftmost Integer]))</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Column Number' datatype='integer' name='[Calculation_600949131455569924]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE MONTH([Date])&#10;When 1 THEN 1&#10;When 2 THEN 2&#10;When 3 THEN 3&#10;When 4 THEN 1&#10;When 5 THEN 2&#10;When 6 THEN 3&#10;When 7 THEN 1&#10;When 8 THEN 2&#10;When 9 THEN 3&#10;When 10 THEN 1&#10;When 11 THEN 2&#10;When 12 THEN 3&#10;END' />
        <desc>
          <formatted-text>
            <run>Returns the month as an integer&#10;&#10;CASE MONTH([Date])&#10;When 1 THEN 1&#10;When 2 THEN 2&#10;When 3 THEN 3&#10;When 4 THEN 1&#10;When 5 THEN 2&#10;When 6 THEN 3&#10;When 7 THEN 1&#10;When 8 THEN 2&#10;When 9 THEN 3&#10;When 10 THEN 1&#10;When 11 THEN 2&#10;When 12 THEN 3&#10;END</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Week of Index' datatype='real' datatype-customized='true' name='[Calculation_600949131456536581]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='FLOAT(DATEPART(&apos;week&apos;, [Date]) - {FIXED DATEPART(&apos;month&apos;,[Date]): MIN(DATEPART(&apos;week&apos;, [Date]))})&#10;&#10;//This calculation first looks at the week number at the level of the visualization &#10;//and then subtracts the minimum week number at the Month Level.' />
        <desc>
          <formatted-text>
            <run>Returns week integer&#10;&#10;FLOAT(DATEPART(&apos;week&apos;, [Date]) - {FIXED DATEPART(&apos;month&apos;,[Date]): MIN(DATEPART(&apos;week&apos;, [Date]))})&#10;&#10;//This calculation first looks at the week number at the level of the visualization &#10;//and then subtracts the minimum week number at the Month Level.</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Week Label' datatype='real' name='[Calculation_622059754715639808]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEPART(&apos;weekday&apos;,[Date])=4 THEN -2.0&#10;END&#10;&#10;//If on Wed (4th day) then give dot on -2' />
        <desc>
          <formatted-text>
            <run>IF DATEPART(&apos;weekday&apos;,[Date])=4 THEN -2.0&#10;END&#10;&#10;//If on Wed (4th day) then give dot on -2</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Hexlong' datatype='real' name='[Calculation_654429377056342019]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='HEXBINX([Longitude]*[Parameters].[Parameter 1 1],[Latitude]*[Parameters].[Parameter 1 1])' />
        <desc>
          <formatted-text>
            <run>HEXBINX([Longitude]*[Ratio],[Latitude]*[Ratio])</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='End Date Chooser' datatype='datetime' default-format='*MM/DD/YYYY' name='[Calculation_831758618031783937]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='Case [Parameters].[Compare to (copy) 1]&#10;WHEN 1 THEN TODAY()&#10;WHEN 2 THEN DATEADD(&apos;day&apos;, -1, TODAY())&#10;WHEN 3 THEN { MAX([Date]) }&#10;WHEN 4 THEN [Parameters].[Compare to (copy 2)]&#10;END' />
        <desc>
          <formatted-text>
            <run>Returns date as either Today, Yesteday, Max date within data, or custom date&#10;&#10;Case [Parameters].[End Date Chooser]&#10;WHEN 1 THEN TODAY()&#10;WHEN 2 THEN DATEADD(&apos;day&apos;, -1, TODAY())&#10;WHEN 3 THEN { MAX([Date]) }&#10;WHEN 4 THEN [Custom End Date]&#10;END</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Hierarchy Level 1' datatype='string' name='[Calculation_831758618066178052]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='//Switch between hierarchies depending on the level of parameter&#10;&#10;CASE [Parameters].[Compare by (copy 3)]&#10;WHEN 1 THEN [String]&#10;WHEN 2 THEN [String]&#10;//WHEN 3 THEN [String]&#10;END' />
        <desc>
          <formatted-text>
            <run>CASE [Parameters].[Category]&#10;WHEN 1 THEN [String]&#10;WHEN 2 THEN [String]&#10;//WHEN 3 THEN [String]&#10;END</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Hexlat' datatype='real' name='[Hexlong (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='HEXBINY([Longitude]*[Parameters].[Parameter 1 1],[Latitude]*[Parameters].[Parameter 1 1])' />
        <desc>
          <formatted-text>
            <run>HEXBINY([Longitude]*[Ratio],[Latitude]*[Ratio])</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Hierarchy Level 2' datatype='string' name='[Hierarchy Level 1 (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='//Switch between hierarchies depending on the level of parameter&#10;&#10;CASE [Parameters].[Compare by (copy 3)]&#10;WHEN 1 THEN [String]&#10;WHEN 2 THEN &quot; &quot;&#10;//WHEN 3 THEN [AREA]&#10;END' />
        <desc>
          <formatted-text>
            <run>CASE [Parameters].[Category]&#10;WHEN 1 THEN [String]&#10;WHEN 2 THEN &quot; &quot;&#10;//WHEN 3 THEN [AREA]&#10;END</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Hierarchy Level 3' datatype='string' name='[Hierarchy Level 2 (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='//Switch between hierarchies depending on the level of parameter&#10;&#10;CASE [Parameters].[Compare by (copy 3)]&#10;WHEN 1 THEN &quot; &quot;&#10;WHEN 2 THEN &quot; &quot;&#10;//WHEN 3 THEN [String]&#10;END' />
        <desc>
          <formatted-text>
            <run>CASE [Parameters].[Category]&#10;WHEN 1 THEN [String]&#10;WHEN 2 THEN &quot; &quot;&#10;//WHEN 3 THEN [AREA]&#10;END</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='date' name='[Month / Day / CY (Days)]' role='dimension' type='quantitative' user:agg-type='Day-Trunc' user:base-field='Calculation_245586981527650304' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='DATE(DATETRUNC(&apos;day&apos;, [Calculation_245586981527650304]))' />
      </column>
      <column datatype='date' name='[Month / Day / CY (Months)]' role='dimension' type='quantitative' user:agg-type='Month-Trunc' user:base-field='Calculation_245586981527650304' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='DATE(DATETRUNC(&apos;month&apos;, [Calculation_245586981527650304]))' />
      </column>
      <column datatype='date' name='[Month / Day / CY (Quarters)]' role='dimension' type='quantitative' user:agg-type='Quarter-Trunc' user:base-field='Calculation_245586981527650304' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='DATE(DATETRUNC(&apos;quarter&apos;, [Calculation_245586981527650304]))' />
      </column>
      <column datatype='date' name='[Month / Day / CY (Week numbers)]' role='dimension' type='quantitative' user:agg-type='Week-Trunc' user:base-field='Calculation_245586981527650304' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='DATE(DATETRUNC(&apos;week&apos;, [Calculation_245586981527650304]))' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='variable Periods to Date Filter' datatype='boolean' name='[Periods to Date Filter (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='//Ability to select month &amp; year&#10;(&#10;    (&#10;        [Parameters].[Date Level (copy)] = &apos;LM&apos;&#10;        AND DATEPART([Parameters].[Parameter 1], [Date]) &gt;= (DATEPART([Parameters].[Parameter 1], TODAY()) - 1)&#10;    )&#10;    OR&#10;    (   &#10;        [Parameters].[Date Level (copy)] = &apos;L3M&apos;&#10;        AND DATEPART([Parameters].[Parameter 1], [Date]) &gt;= (DATEPART([Parameters].[Parameter 1], TODAY()) - 2)&#10;    )&#10;    OR&#10;    (   &#10;        [Parameters].[Date Level (copy)] = &apos;L6M&apos;&#10;        AND DATEPART([Parameters].[Parameter 1], [Date]) &gt;= (DATEPART([Parameters].[Parameter 1], TODAY()) - 5)&#10;    )&#10;)&#10;AND&#10;YEAR([Date]) &gt;= (YEAR(Today()) - 1)' />
        <desc>
          <formatted-text>
            <run>Boolean Filter - True returns date based on user selection of Period-LM, L3M, L6M, LY &amp; Date Level-day,month,etc.&#10;&#10;//Ability to select month &amp; year&#10;(&#10;    (&#10;        [Periods] = &apos;LM&apos;&#10;        AND DATEPART([Date Level], [Date]) &gt;= (DATEPART([Date Level], TODAY()) - 1)&#10;    )&#10;    OR&#10;    (   &#10;        [Periods] = &apos;L3M&apos;&#10;        AND DATEPART([Date Level], [Date]) &gt;= (DATEPART([Date Level], TODAY()) - 2)&#10;    )&#10;    OR&#10;    (   &#10;        [Periods] = &apos;L6M&apos;&#10;        AND DATEPART([Date Level], [Date]) &gt;= (DATEPART([Date Level], TODAY()) - 5)&#10;    )&#10;)&#10;AND&#10;YEAR([Date]) &gt;= (YEAR(Today()) - 1)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Metric Prefix' datatype='string' default-format='n#,##0' name='[Select Metric (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#10;WHEN 1 THEN &quot;$&quot;&#10;WHEN 2 THEN &quot;&quot;&#10;WHEN 3 THEN &quot;&quot;&#10;WHEN 4 THEN &quot;&quot;&#10;WHEN 5 THEN &quot;&quot;&#10;WHEN 6 THEN &quot;&quot;&#10;WHEN 7 THEN &quot;&quot;&#10;END' />
        <desc>
          <formatted-text>
            <run>CASE [Parameters].[Metric]&#10;WHEN 1 THEN &quot;$&quot;&#10;WHEN 2 THEN &quot;&quot;&#10;WHEN 3 THEN &quot;&quot;&#10;WHEN 4 THEN &quot;&quot;&#10;WHEN 5 THEN &quot;&quot;&#10;WHEN 6 THEN &quot;&quot;&#10;WHEN 7 THEN &quot;&quot;&#10;END</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Metric Suffix' datatype='string' default-format='n#,##0' name='[Select Metric Prefix (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#10;WHEN 1 THEN &quot;&quot;&#10;WHEN 2 THEN &quot;%&quot;&#10;WHEN 3 THEN &quot;%&quot;&#10;WHEN 4 THEN &quot;&quot;&#10;WHEN 5 THEN &quot;&quot;&#10;WHEN 6 THEN &quot;&quot;&#10;WHEN 7 THEN &quot;&quot;&#10;END' />
        <desc>
          <formatted-text>
            <run>CASE [Parameters].[Metric]&#10;WHEN 1 THEN &quot;&quot;&#10;WHEN 2 THEN &quot;%&quot;&#10;WHEN 3 THEN &quot;%&quot;&#10;WHEN 4 THEN &quot;&quot;&#10;WHEN 5 THEN &quot;&quot;&#10;WHEN 6 THEN &quot;&quot;&#10;WHEN 7 THEN &quot;&quot;&#10;END</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='None' caption='Padded' datatype='integer' name='[ToPad (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Calculation_1150177182295941123]' peg='0' size='1' />
        <desc>
          <formatted-text>
            <run fontname='lato,Helvetica,Arial,sans-serif'>Size of bin = 1&#10;&#10;Because Bins are Range aware then they will effectively allow us to pad out our data for each row and create 49 rows of data for each row</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[customDateMonth]' role='dimension' type='ordinal' user:agg-type='Month' user:base-field='Date' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='DATEPART(&apos;month&apos;, [Date])' scope-isolation='false' />
        <desc>
          <formatted-text>
            <run>Custom Date Field - Set to DATEPART Month</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[Calculation_622059754715639808]' derivation='Avg' name='[avg:Calculation_622059754715639808:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='Hierarchy Chooser'>
          <field>[Calculation_831758618066178052]</field>
          <field>[Hierarchy Level 1 (copy)]</field>
          <field>[Hierarchy Level 2 (copy)]</field>
          <desc>
            <formatted-text>
              <run>3 level dynamic hierarchy</run>
            </formatted-text>
          </desc>
        </drill-path>
      </drill-paths>
      <folder name='Benford' role='dimensions'>
        <folder-item name='[Calculation_544161563453112321]' type='field' />
      </folder>
      <folder name='Calendar' role='dimensions'>
        <folder-item name='[Calculation_600949131455569924]' type='field' />
        <folder-item name='[Calculation_600949131456536581]' type='field' />
      </folder>
      <folder name='Date Filter' role='dimensions'>
        <folder-item name='[Calculation_1083397250400686089]' type='field' />
        <folder-item name='[Calculation_1083397250404327436]' type='field' />
        <folder-item name='[Calculation_1083397250409349135]' type='field' />
        <folder-item name='[Calculation_1083397250419925010]' type='field' />
        <folder-item name='[Calculation_1083397250746245148]' type='field' />
        <folder-item name='[Calculation_279223240561987592]' type='field' />
        <folder-item name='[Calculation_295408053817495552]' type='field' />
        <folder-item name='[Periods to Date Filter (copy)]' type='field' />
      </folder>
      <folder name='Date Selector' role='dimensions'>
        <folder-item name='[Calculation_245586981527650304]' type='field' />
        <folder-item name='[Calculation_254242336720187392]' type='field' />
        <folder-item name='[Calculation_321444487060287492]' type='field' />
        <folder-item name='[Calculation_831758618031783937]' type='field' />
        <folder-item name='[Month / Day / CY (Days)]' type='field' />
        <folder-item name='[Month / Day / CY (Months)]' type='field' />
        <folder-item name='[Month / Day / CY (Quarters)]' type='field' />
        <folder-item name='[Month / Day / CY (Week numbers)]' type='field' />
      </folder>
      <folder name='Date Transformations' role='dimensions'>
        <folder-item name='[Calculation_1083397250226696196]' type='field' />
        <folder-item name='[Calculation_1083397250236698629]' type='field' />
        <folder-item name='[Calculation_1083397250250821638]' type='field' />
        <folder-item name='[Calculation_1083397250405617678]' type='field' />
        <folder-item name='[Calculation_1083397250571366419]' type='field' />
        <folder-item name='[Calculation_1083397250571407380]' type='field' />
        <folder-item name='[Calculation_1083397250571546645]' type='field' />
        <folder-item name='[Calculation_1083397250573553686]' type='field' />
        <folder-item name='[Calculation_1083397250574790679]' type='field' />
        <folder-item name='[Calculation_1083397250729541659]' type='field' />
        <folder-item name='[Calculation_1336935776517423126]' type='field' />
        <folder-item name='[Calculation_279223240556945408]' type='field' />
        <folder-item name='[Calculation_279223240558645253]' type='field' />
        <folder-item name='[Calculation_295408053821296641]' type='field' />
        <folder-item name='[customDateMonth]' type='field' />
      </folder>
      <folder name='Sankey' role='dimensions'>
        <folder-item name='[ToPad (bin)]' type='field' />
      </folder>
      <folder name='Benford' role='measures'>
        <folder-item name='[Calculation_544161563454058499]' type='field' />
      </folder>
      <folder name='Calendar' role='measures'>
        <folder-item name='[Calculation_622059754715639808]' type='field' />
      </folder>
      <folder name='Date' role='measures'>
        <folder-item name='[Calculation_1083397250402594826]' type='field' />
        <folder-item name='[Calculation_1083397250411323409]' type='field' />
      </folder>
      <folder name='HexbinMap' role='measures'>
        <folder-item name='[Calculation_654429377056342019]' type='field' />
        <folder-item name='[Hexlong (copy)]' type='field' />
      </folder>
      <folder name='Sankey' role='measures'>
        <folder-item name='[Calculation_1150177182295941123]' type='field' />
        <folder-item name='[Calculation_1150177182296424452]' type='field' />
        <folder-item name='[Calculation_1150177182297370629]' type='field' />
        <folder-item name='[Calculation_1150177182297473030]' type='field' />
        <folder-item name='[Calculation_1150177182297591815]' type='field' />
        <folder-item name='[Calculation_1150177182297722888]' type='field' />
        <folder-item name='[Calculation_1150177182302507017]' type='field' />
      </folder>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/amonzon/Documents/My Tableau Repository/Datasources/Calc.tde' schema='Extract' tablename='Extract' update-time='04/14/2017 08:42:20 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_1083397250226696196]' formula='DATEPART(&apos;dayofyear&apos;, [Date])' />
            <calculation column='[Calculation_1083397250236698629]' formula='DATEPART(&apos;month&apos;, [Date])' />
            <calculation column='[Calculation_1083397250250821638]' formula='DATETRUNC(&apos;year&apos;, [Date])' />
            <calculation column='[Calculation_1083397250405617678]' formula='DATETRUNC(&apos;month&apos;, [Date])' />
            <calculation column='[Calculation_1083397250729541659]' formula='DATEPART(&apos;dayofyear&apos;, DATEADD(&apos;day&apos;, -1, DATEADD(&apos;month&apos;, 1, DATETRUNC(&apos;month&apos;, [Date])))) + 1' />
            <calculation column='[Calculation_1083397250746245148]' formula='[Calculation_1083397250226696196] &lt;= 100' />
            <calculation column='[Calculation_1150177182295941123]' formula='IF [Row Type]==&apos;Real&apos; THEN 1 &#10;ELSE 99&#10;END' />
            <calculation column='[Calculation_600949131455569924]' formula='CASE MONTH([Date])&#10;When 1 THEN 1&#10;When 2 THEN 2&#10;When 3 THEN 3&#10;When 4 THEN 1&#10;When 5 THEN 2&#10;When 6 THEN 3&#10;When 7 THEN 1&#10;When 8 THEN 2&#10;When 9 THEN 3&#10;When 10 THEN 1&#10;When 11 THEN 2&#10;When 12 THEN 3&#10;END' />
            <calculation column='[Calculation_622059754715639808]' formula='IF DATEPART(&apos;weekday&apos;,[Date])=4 THEN -2.0&#10;END&#10;&#10;//If on Wed (4th day) then give dot on -2' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[ToPad (bin)]' formula='SYS_NUMBIN([Calculation_1150177182295941123],1)' />
            <calculation column='[customDateMonth]' formula='DATEPART(&apos;month&apos;, [Date])' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='2' timestamp-start='2017-04-14 20:42:20.965' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_1150177182295941123</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Calculation_1150177182295941123]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1150177182295941123</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>100.0</statistic>
                <statistic aggregation='Avg' datatype='real'>50.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>99</statistic>
                <statistic aggregation='Stdev' datatype='real'>69.296464556281663</statistic>
                <statistic aggregation='StdevP' datatype='real'>49.0</statistic>
                <statistic aggregation='Var' datatype='real'>4802.0</statistic>
                <statistic aggregation='VarP' datatype='real'>2401.0</statistic>
                <statistic aggregation='Count' datatype='integer'>2</statistic>
                <statistic aggregation='Median' datatype='integer'>99</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9802.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_622059754715639808</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_622059754715639808]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_622059754715639808</remote-alias>
              <ordinal>1</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Count' datatype='integer'>0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2017-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2017-01-02#</statistic>
                <statistic aggregation='Count' datatype='integer'>2</statistic>
                <statistic aggregation='Median' datatype='date'>#2017-01-02#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>9632.9400000000005</statistic>
                <statistic aggregation='Avg' datatype='real'>4816.4700000000003</statistic>
                <statistic aggregation='Min' datatype='real'>4815.9700000000003</statistic>
                <statistic aggregation='Max' datatype='real'>4816.9700000000003</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.70710678118654757</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.5</statistic>
                <statistic aggregation='Var' datatype='real'>0.5</statistic>
                <statistic aggregation='VarP' datatype='real'>0.25</statistic>
                <statistic aggregation='Count' datatype='integer'>2</statistic>
                <statistic aggregation='Median' datatype='real'>4816.9700000000003</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>46396767.021800004</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-454.0</statistic>
                <statistic aggregation='Avg' datatype='real'>-227.0</statistic>
                <statistic aggregation='Min' datatype='real'>-227.5</statistic>
                <statistic aggregation='Max' datatype='real'>-226.5</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.70710678118654757</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.5</statistic>
                <statistic aggregation='Var' datatype='real'>0.5</statistic>
                <statistic aggregation='VarP' datatype='real'>0.25</statistic>
                <statistic aggregation='Count' datatype='integer'>2</statistic>
                <statistic aggregation='Median' datatype='real'>-227.5</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>103058.5</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Measure</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Measure]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Measure</remote-alias>
              <ordinal>5</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.5</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>2</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.70710678118654757</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.5</statistic>
                <statistic aggregation='Var' datatype='real'>0.5</statistic>
                <statistic aggregation='VarP' datatype='real'>0.25</statistic>
                <statistic aggregation='Count' datatype='integer'>2</statistic>
                <statistic aggregation='Median' datatype='integer'>2</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>6</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>2</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Row Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Row Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Row Type</remote-alias>
              <ordinal>7</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Dummy&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Real&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Dummy&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;desc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>StringB</remote-name>
              <remote-type>129</remote-type>
              <local-name>[StringB]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>StringB</remote-alias>
              <ordinal>8</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ABC&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ABCD&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;ABC&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>String</remote-name>
              <remote-type>129</remote-type>
              <local-name>[String]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>String</remote-alias>
              <ordinal>9</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ABC&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ABCD&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;ABCD&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1083397250226696196</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Calculation_1083397250226696196]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1083397250226696196</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.5</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>2</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.70710678118654757</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.5</statistic>
                <statistic aggregation='Var' datatype='real'>0.5</statistic>
                <statistic aggregation='VarP' datatype='real'>0.25</statistic>
                <statistic aggregation='Count' datatype='integer'>2</statistic>
                <statistic aggregation='Median' datatype='integer'>2</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1083397250236698629</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Calculation_1083397250236698629]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1083397250236698629</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>2</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1083397250250821638</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Calculation_1083397250250821638]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1083397250250821638</remote-alias>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2017-01-01 00:00:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2017-01-01 00:00:00#</statistic>
                <statistic aggregation='Count' datatype='integer'>2</statistic>
                <statistic aggregation='Median' datatype='datetime'>#2017-01-01 00:00:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1083397250405617678</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Calculation_1083397250405617678]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1083397250405617678</remote-alias>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2017-01-01 00:00:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2017-01-01 00:00:00#</statistic>
                <statistic aggregation='Count' datatype='integer'>2</statistic>
                <statistic aggregation='Median' datatype='datetime'>#2017-01-01 00:00:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1083397250729541659</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Calculation_1083397250729541659]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1083397250729541659</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>64.0</statistic>
                <statistic aggregation='Avg' datatype='real'>32.0</statistic>
                <statistic aggregation='Min' datatype='integer'>32</statistic>
                <statistic aggregation='Max' datatype='integer'>32</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>2</statistic>
                <statistic aggregation='Median' datatype='integer'>32</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2048.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1083397250746245148</remote-name>
              <remote-type>11</remote-type>
              <local-name>[Calculation_1083397250746245148]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1083397250746245148</remote-alias>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>true</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>2</statistic>
                <statistic aggregation='Median' datatype='boolean'>true</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_600949131455569924</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Calculation_600949131455569924]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_600949131455569924</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>2</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ToPad (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[ToPad (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ToPad (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>100.0</statistic>
                <statistic aggregation='Avg' datatype='real'>50.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>99</statistic>
                <statistic aggregation='Stdev' datatype='real'>69.296464556281663</statistic>
                <statistic aggregation='StdevP' datatype='real'>49.0</statistic>
                <statistic aggregation='Var' datatype='real'>4802.0</statistic>
                <statistic aggregation='VarP' datatype='real'>2401.0</statistic>
                <statistic aggregation='Count' datatype='integer'>2</statistic>
                <statistic aggregation='Median' datatype='integer'>99</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9802.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>customDateMonth</remote-name>
              <remote-type>16</remote-type>
              <local-name>[customDateMonth]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>customDateMonth</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>2</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.425587' measure-ordering='alphabetic' measure-percentage='0.39295' parameter-percentage='0.181462' show-structure='false' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.19qtmxc1wwopz61d4p2j00eyie3e].[avg:Calculation_622059754715639808:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.19qtmxc1wwopz61d4p2j00eyie3e]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='A' caption='Category' datatype='integer' name='[Compare by (copy 3)]' param-domain-type='list' role='measure' type='quantitative' value='1'>
          <calculation class='tableau' formula='1' />
          <aliases>
            <alias key='1' value='A' />
            <alias key='2' value='B' />
            <alias key='3' value='C' />
          </aliases>
        </column>
        <column caption='Custom End Date' datatype='date' folder-name='Date Selector' name='[Compare to (copy 2)]' param-domain-type='any' role='measure' type='quantitative' value='#2017-02-15#'>
          <calculation class='tableau' formula='#2017-02-15#' />
        </column>
        <column alias='Year to Date' caption='Date Compare to' datatype='integer' folder-name='Date Selector' name='[Compare to (copy 3) 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
          <calculation class='tableau' formula='1' />
          <aliases>
            <alias key='1' value='Year to Date' />
            <alias key='2' value='Year to Week' />
            <alias key='3' value='Year to Weekday' />
            <alias key='4' value='Academic YTD' />
            <alias key='5' value='Quarter to Date' />
            <alias key='6' value='Month to Date' />
            <alias key='7' value='180Days to Previous 180Days' />
            <alias key='8' value='180Days to Prior Year 180Days' />
            <alias key='9' value='90Days to Previous 90Days' />
            <alias key='10' value='90Days to Prior Year 90Days' />
            <alias key='11' value='30Days to Previous 30Days' />
            <alias key='12' value='30Days to Prior Year 30Days' />
            <alias key='13' value='Custom Range' />
          </aliases>
        </column>
        <column alias='Months' caption='Date View' datatype='integer' folder-name='Date Selector' name='[Compare to (copy 4)]' param-domain-type='list' role='measure' type='quantitative' value='2'>
          <calculation class='tableau' formula='2' />
          <aliases>
            <alias key='1' value='Quarters' />
            <alias key='2' value='Months' />
            <alias key='3' value='Week' />
            <alias key='4' value='Day' />
          </aliases>
        </column>
        <column alias='Custom Date' caption='End Date Chooser' datatype='integer' folder-name='Date Selector' name='[Compare to (copy) 1]' param-domain-type='list' role='measure' type='quantitative' value='4'>
          <calculation class='tableau' formula='4' />
          <aliases>
            <alias key='1' value='Today' />
            <alias key='2' value='Yesterday' />
            <alias key='3' value='Max Date' />
            <alias key='4' value='Custom Date' />
          </aliases>
        </column>
        <column caption='Custom Range-B End' datatype='date' folder-name='Date Selector' name='[Current End Date (copy)]' param-domain-type='range' role='measure' type='quantitative' value='#2016-02-14#'>
          <calculation class='tableau' formula='#2016-02-14#' />
          <range />
        </column>
        <column caption='Custom Range-B Start' datatype='date' folder-name='Date Selector' name='[Current Start Date (copy 2)]' param-domain-type='range' role='measure' type='quantitative' value='#2013-02-14#'>
          <calculation class='tableau' formula='#2013-02-14#' />
          <range />
        </column>
        <column caption='Custom Range-A End' datatype='date' folder-name='Date Selector' name='[Current Start Date (copy)]' param-domain-type='range' role='measure' type='quantitative' value='#2017-02-15#'>
          <calculation class='tableau' formula='#2017-02-15#' />
          <range />
        </column>
        <column caption='Custom Range-A Start' datatype='date' folder-name='Date Selector' name='[Date Chooser (copy)]' param-domain-type='range' role='measure' type='quantitative' value='#2016-02-15#'>
          <calculation class='tableau' formula='#2016-02-15#' />
          <range />
        </column>
        <column alias='LM' caption='Periods' datatype='string' folder-name='Date' name='[Date Level (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;LM&quot;'>
          <calculation class='tableau' formula='&quot;LM&quot;' />
          <aliases>
            <alias key='&quot;LM&quot;' value='LM' />
          </aliases>
        </column>
        <column caption='Ratio' datatype='real' folder-name='HexbinMap' name='[Parameter 1 1]' param-domain-type='any' role='measure' type='quantitative' value='90.0'>
          <calculation class='tableau' formula='90.0' />
        </column>
        <column alias='Week' caption='Date Level' datatype='string' folder-name='Date' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
          <calculation class='tableau' formula='&quot;week&quot;' />
          <aliases>
            <alias key='&quot;day&quot;' value='Day' />
            <alias key='&quot;month&quot;' value='Month' />
            <alias key='&quot;quarter&quot;' value='Quarter' />
            <alias key='&quot;week&quot;' value='Week' />
            <alias key='&quot;year&quot;' value='Year' />
          </aliases>
        </column>
        <column caption='N Periods Back' datatype='integer' folder-name='Date' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='3'>
          <calculation class='tableau' formula='3' />
          <range granularity='1' max='24' min='1' />
        </column>
        <column caption='N Months Back' datatype='integer' folder-name='Date' name='[Parameter 3 1]' param-domain-type='list' role='measure' type='quantitative' value='12'>
          <calculation class='tableau' formula='12' />
        </column>
        <column alias='Sales' caption='Metric' datatype='integer' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='1'>
          <calculation class='tableau' formula='1' />
          <aliases>
            <alias key='1' value='Sales' />
            <alias key='2' value='Profit' />
          </aliases>
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='Tableau Navigation' inline='true' name='federated.1i8nsme1cdfxbk1emlnxx1f4s8o5' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Navigation' name='excel-direct.11mmxof0vdblu41d7gbzx06eap52'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/amonzon/Google Drive/Tableau Navigation.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.11mmxof0vdblu41d7gbzx06eap52' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:A101:no:A1:A101:0' header='yes' outcome='6'>
            <column datatype='integer' name='ID' ordinal='0' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:A101:no:A1:A101:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' caption='Increment ID' datatype='integer' name='[Calculation_480548215471169536]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [ID] &gt;= 100 THEN 1 ELSE [ID] + 1 END' />
        <desc>
          <formatted-text>
            <run>Used to reset selection &#10;Dashboards must have &quot;Tableau Navigation&quot; datasource on orginating and destination worksheet/dashboard&#10;</run>
            <run bold='true'>&#10;Dashboard Action Set Up</run>
            <run>&#10;Run action on: Select&#10;Clearing the selection will: Leave the filter&#10;Target Filters: Increment ID = ID&#10;&#10;IF [ID] &gt;= 100 THEN 1 ELSE [ID] + 1 END&#10;</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.325065' measure-ordering='alphabetic' measure-percentage='0.296345' parameter-percentage='0.37859' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Benford'>
      <table>
        <view>
          <datasources>
            <datasource caption='Calc' name='federated.19qtmxc1wwopz61d4p2j00eyie3e' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Sales' caption='Metric' datatype='integer' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='1'>
              <calculation class='tableau' formula='1' />
              <aliases>
                <alias key='1' value='Sales' />
                <alias key='2' value='Profit' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19qtmxc1wwopz61d4p2j00eyie3e'>
            <column caption='Leftmost Integer' datatype='string' name='[Calculation_544161563453112321]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LEFT(STR(ZN([Calculation_544161563453747202])), 1 )' />
              <desc>
                <formatted-text>
                  <run>Returns the first integer&#10;&#10;LEFT(STR(ZN([Metric])), 1 )</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Metric' datatype='integer' name='[Calculation_544161563453747202]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Case [Parameters].[Parameter 3]&#10;WHEN 1 THEN [Measure]&#10;WHEN 2 THEN [Measure]&#10;END' />
              <desc>
                <formatted-text>
                  <run>Case [Parameters].[Metric]&#10;WHEN 1 THEN [Measure]&#10;WHEN 2 THEN [Measure]&#10;END</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Benfords Law' datatype='real' name='[Calculation_544161563454058499]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LOG(INT([Calculation_544161563453112321])+1)-LOG(INT([Calculation_544161563453112321]))' />
              <desc>
                <formatted-text>
                  <run>LOG(INT([Leftmost Integer])+1)-LOG(INT([Leftmost Integer]))</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='integer' name='[Measure]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_544161563454058499]' derivation='Min' name='[min:Calculation_544161563454058499:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_544161563453112321]' derivation='None' name='[none:Calculation_544161563453112321:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[none:Calculation_544161563453112321:nk]'>
            <groupfilter function='member' level='[none:Calculation_544161563453112321:nk]' member='&quot;1&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.19qtmxc1wwopz61d4p2j00eyie3e].[none:Calculation_544161563453112321:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline0' value='#a3c0fe' />
            <format attr='reverse-palette' id='refline0' value='false' />
            <format attr='reverse-palette' id='refline1' value='false' />
            <format attr='fill-color' id='refline1' value='#5284ff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[min:Calculation_544161563454058499:qk]' />
            </encodings>
            <reference-line axis-column='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[pcto:sum:Number of Records:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='average' id='refline0' label-type='none' percentage-bands='true' probability='95' scope='per-pane' symmetric='false' value-column='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[min:Calculation_544161563454058499:qk]' z-order='1'>
              <reference-line-value percentage='80' />
              <reference-line-value percentage='100' />
            </reference-line>
            <reference-line axis-column='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[pcto:sum:Number of Records:qk]' enable-instant-analytics='false' fill-above='false' fill-below='false' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-pane' symmetric='false' value-column='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[min:Calculation_544161563454058499:qk]' z-order='2'>
              <reference-line-value percentage='100' />
              <reference-line-value percentage='120' />
            </reference-line>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19qtmxc1wwopz61d4p2j00eyie3e].[pcto:sum:Number of Records:qk]</rows>
        <cols>[federated.19qtmxc1wwopz61d4p2j00eyie3e].[none:Calculation_544161563453112321:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Calendar'>
      <table>
        <view>
          <datasources>
            <datasource caption='Calc' name='federated.19qtmxc1wwopz61d4p2j00eyie3e' />
          </datasources>
          <datasource-dependencies datasource='federated.19qtmxc1wwopz61d4p2j00eyie3e'>
            <column aggregation='Sum' caption='Column Number' datatype='integer' name='[Calculation_600949131455569924]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='CASE MONTH([Date])&#10;When 1 THEN 1&#10;When 2 THEN 2&#10;When 3 THEN 3&#10;When 4 THEN 1&#10;When 5 THEN 2&#10;When 6 THEN 3&#10;When 7 THEN 1&#10;When 8 THEN 2&#10;When 9 THEN 3&#10;When 10 THEN 1&#10;When 11 THEN 2&#10;When 12 THEN 3&#10;END' />
              <desc>
                <formatted-text>
                  <run>Returns the month as an integer&#10;&#10;CASE MONTH([Date])&#10;When 1 THEN 1&#10;When 2 THEN 2&#10;When 3 THEN 3&#10;When 4 THEN 1&#10;When 5 THEN 2&#10;When 6 THEN 3&#10;When 7 THEN 1&#10;When 8 THEN 2&#10;When 9 THEN 3&#10;When 10 THEN 1&#10;When 11 THEN 2&#10;When 12 THEN 3&#10;END</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' caption='Week of Index' datatype='real' datatype-customized='true' name='[Calculation_600949131456536581]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='FLOAT(DATEPART(&apos;week&apos;, [Date]) - {FIXED DATEPART(&apos;month&apos;,[Date]): MIN(DATEPART(&apos;week&apos;, [Date]))})&#10;&#10;//This calculation first looks at the week number at the level of the visualization &#10;//and then subtracts the minimum week number at the Month Level.' />
              <desc>
                <formatted-text>
                  <run>Returns week integer&#10;&#10;FLOAT(DATEPART(&apos;week&apos;, [Date]) - {FIXED DATEPART(&apos;month&apos;,[Date]): MIN(DATEPART(&apos;week&apos;, [Date]))})&#10;&#10;//This calculation first looks at the week number at the level of the visualization &#10;//and then subtracts the minimum week number at the Month Level.</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Week Label' datatype='real' name='[Calculation_622059754715639808]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATEPART(&apos;weekday&apos;,[Date])=4 THEN -2.0&#10;END&#10;&#10;//If on Wed (4th day) then give dot on -2' />
              <desc>
                <formatted-text>
                  <run>IF DATEPART(&apos;weekday&apos;,[Date])=4 THEN -2.0&#10;END&#10;&#10;//If on Wed (4th day) then give dot on -2</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_622059754715639808]' derivation='Avg' name='[avg:Calculation_622059754715639808:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Avg' name='[avg:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_600949131455569924]' derivation='None' name='[none:Calculation_600949131455569924:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_600949131456536581]' derivation='None' name='[none:Calculation_600949131456536581:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Weekday' name='[wd:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[avg:Calculation_622059754715639808:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
            <format attr='hnaxis' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[mn:Date:ok]' value='iLLL' />
            <format attr='display' field='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[none:Calculation_600949131455569924:ok]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[none:Calculation_600949131456536581:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <size column='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[avg:Number of Records:qk]' />
              <lod column='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[dy:Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[avg:Calculation_622059754715639808:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[mn:Date:ok]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.19qtmxc1wwopz61d4p2j00eyie3e].[mn:Date:ok]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.19qtmxc1wwopz61d4p2j00eyie3e].[qr:Date:ok] * ([federated.19qtmxc1wwopz61d4p2j00eyie3e].[none:Calculation_600949131456536581:qk] + [federated.19qtmxc1wwopz61d4p2j00eyie3e].[avg:Calculation_622059754715639808:qk]))</rows>
        <cols>([federated.19qtmxc1wwopz61d4p2j00eyie3e].[yr:Date:ok] / ([federated.19qtmxc1wwopz61d4p2j00eyie3e].[none:Calculation_600949131455569924:ok] / [federated.19qtmxc1wwopz61d4p2j00eyie3e].[wd:Date:ok]))</cols>
      </table>
    </worksheet>
    <worksheet name='Navigation-Icon'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Navigation' name='federated.1i8nsme1cdfxbk1emlnxx1f4s8o5' />
          </datasources>
          <datasource-dependencies datasource='federated.1i8nsme1cdfxbk1emlnxx1f4s8o5'>
            <column aggregation='Sum' caption='Increment ID' datatype='integer' name='[Calculation_480548215471169536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [ID] &gt;= 100 THEN 1 ELSE [ID] + 1 END' />
              <desc>
                <formatted-text>
                  <run>Used to reset selection &#10;Dashboards must have &quot;Tableau Navigation&quot; datasource on orginating and destination worksheet/dashboard&#10;</run>
                  <run bold='true'>&#10;Dashboard Action Set Up</run>
                  <run>&#10;Run action on: Select&#10;Clearing the selection will: Leave the filter&#10;Target Filters: Increment ID = ID&#10;&#10;IF [ID] &gt;= 100 THEN 1 ELSE [ID] + 1 END&#10;</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' name='[ID]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_480548215471169536]' derivation='None' name='[none:Calculation_480548215471169536:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[federated.1i8nsme1cdfxbk1emlnxx1f4s8o5].[none:Calculation_480548215471169536:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Navigation-Text'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Navigation' name='federated.1i8nsme1cdfxbk1emlnxx1f4s8o5' />
          </datasources>
          <datasource-dependencies datasource='federated.1i8nsme1cdfxbk1emlnxx1f4s8o5'>
            <column aggregation='Sum' caption='Increment ID' datatype='integer' name='[Calculation_480548215471169536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [ID] &gt;= 100 THEN 1 ELSE [ID] + 1 END' />
              <desc>
                <formatted-text>
                  <run>Used to reset selection &#10;Dashboards must have &quot;Tableau Navigation&quot; datasource on orginating and destination worksheet/dashboard&#10;</run>
                  <run bold='true'>&#10;Dashboard Action Set Up</run>
                  <run>&#10;Run action on: Select&#10;Clearing the selection will: Leave the filter&#10;Target Filters: Increment ID = ID&#10;&#10;IF [ID] &gt;= 100 THEN 1 ELSE [ID] + 1 END&#10;</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' name='[ID]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_480548215471169536]' derivation='None' name='[none:Calculation_480548215471169536:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.1i8nsme1cdfxbk1emlnxx1f4s8o5].[none:Calculation_480548215471169536:ok]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>Text</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sankey'>
      <table>
        <view>
          <datasources>
            <datasource caption='Calc' name='federated.19qtmxc1wwopz61d4p2j00eyie3e' />
          </datasources>
          <datasource-dependencies datasource='federated.19qtmxc1wwopz61d4p2j00eyie3e'>
            <column caption='ToPad' datatype='integer' name='[Calculation_1150177182295941123]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Row Type]==&apos;Real&apos; THEN 1 &#10;ELSE 99&#10;END' />
              <desc>
                <formatted-text>
                  <run>IF [Row Type]==&apos;Real&apos; THEN 1 &#10;ELSE 99&#10;END</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='t' datatype='real' name='[Calculation_1150177182296424452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(index()-25)/4'>
                <table-calc ordering-type='Rows' />
              </calculation>
              <desc>
                <formatted-text>
                  <run>Used with [To Pad]&#10;&#10;(index()-25)/4</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Rank 1' datatype='real' name='[Calculation_1150177182297370629]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(sum([Number of Records]))/TOTAL(sum([Number of Records]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
              <desc>
                <formatted-text>
                  <run>Will show data at the right points vertically&#10;&#10;RUNNING_SUM(sum([Number of Records]))/TOTAL(sum([Number of Records]))</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Rank 2' datatype='real' name='[Calculation_1150177182297473030]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(sum([Number of Records]))/TOTAL(sum([Number of Records]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
              <desc>
                <formatted-text>
                  <run>Will show data at the right points vertically&#10;&#10;RUNNING_SUM(sum([Number of Records]))/TOTAL(sum([Number of Records]))</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Sigmoid' datatype='real' name='[Calculation_1150177182297591815]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1/(1+EXP(1)^-[Calculation_1150177182296424452])'>
                <table-calc ordering-type='Rows' />
              </calculation>
              <desc>
                <formatted-text>
                  <run>Sigmoid fuction - gives the curve&#10;&#10;1/(1+EXP(1)^-[t])</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Curve' datatype='real' name='[Calculation_1150177182297722888]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1150177182297370629]+(([Calculation_1150177182297473030] - [Calculation_1150177182297370629])*[Calculation_1150177182297591815])'>
                <table-calc ordering-type='Rows' />
              </calculation>
              <desc>
                <formatted-text>
                  <run>Curve&#10;&#10;[Rank 1]+(([Rank 2] - [Rank 1])*[Sigmoid])</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Size' datatype='real' name='[Calculation_1150177182302507017]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_AVG(SUM([Number of Records]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
              <desc>
                <formatted-text>
                  <run>Vary lines by size based on measure selected&#10;&#10;RUNNING_AVG(SUM([Number of Records]))</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Row Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[StringB]' role='dimension' type='nominal' />
            <column datatype='string' name='[String]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Padded' datatype='integer' name='[ToPad (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_1150177182295941123]' peg='0' size='1' />
              <desc>
                <formatted-text>
                  <run fontname='lato,Helvetica,Arial,sans-serif'>Size of bin = 1&#10;&#10;Because Bins are Range aware then they will effectively allow us to pad out our data for each row and create 49 rows of data for each row</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[String]' derivation='None' name='[none:String:nk]' pivot='key' type='nominal' />
            <column-instance column='[StringB]' derivation='None' name='[none:StringB:nk]' pivot='key' type='nominal' />
            <column-instance column='[ToPad (bin)]' derivation='None' name='[none:ToPad (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1150177182296424452]' derivation='User' name='[usr:Calculation_1150177182296424452:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[ToPad (bin)]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1150177182297722888]' derivation='User' name='[usr:Calculation_1150177182297722888:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[Calculation_1150177182297591815]' ordering-type='Rows' />
              <table-calc field='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[Calculation_1150177182297473030]' ordering-type='Rows' />
              <table-calc field='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[Calculation_1150177182297370629]' ordering-type='Field'>
                <order field='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[ToPad (bin)]' />
                <order field='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[String]' />
                <order field='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[StringB]' />
              </table-calc>
              <table-calc field='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[Calculation_1150177182296424452]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1150177182302507017]' derivation='User' name='[usr:Calculation_1150177182302507017:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[ToPad (bin)]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <sort class='natural' column='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[none:String:nk]' direction='DESC' />
          <sort class='natural' column='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[none:StringB:nk]' direction='DESC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[usr:Calculation_1150177182296424452:qk:2]' field-type='quantitative' max='7.0' min='-5.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[usr:Calculation_1150177182296424452:qk:2]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[usr:Calculation_1150177182296424452:qk:2]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[usr:Calculation_1150177182297722888:qk:2]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' reverse='true' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[usr:Calculation_1150177182297722888:qk:2]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[usr:Calculation_1150177182297722888:qk:2]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[none:String:nk]' />
              <color column='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[none:StringB:nk]' />
              <size column='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[usr:Calculation_1150177182302507017:qk:2]' />
              <lod column='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[none:String:nk]' />
              <lod column='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[none:StringB:nk]' />
              <lod column='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[none:ToPad (bin):ok]' />
              <path column='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[none:ToPad (bin):ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='14.547999382019043' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19qtmxc1wwopz61d4p2j00eyie3e].[usr:Calculation_1150177182297722888:qk:2]</rows>
        <cols>[federated.19qtmxc1wwopz61d4p2j00eyie3e].[usr:Calculation_1150177182296424452:qk:2]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' maximized='true' name='Navigation-Icon'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i8nsme1cdfxbk1emlnxx1f4s8o5].[none:Calculation_480548215471169536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Navigation-Text'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i8nsme1cdfxbk1emlnxx1f4s8o5].[none:Calculation_480548215471169536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Benford'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19qtmxc1wwopz61d4p2j00eyie3e].[none:Calculation_544161563453112321:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Calendar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19qtmxc1wwopz61d4p2j00eyie3e].[dy:Date:ok]</field>
            <field>[federated.19qtmxc1wwopz61d4p2j00eyie3e].[mn:Date:ok]</field>
            <field>[federated.19qtmxc1wwopz61d4p2j00eyie3e].[none:Calculation_600949131455569924:ok]</field>
            <field>[federated.19qtmxc1wwopz61d4p2j00eyie3e].[none:Calculation_600949131456536581:ok]</field>
            <field>[federated.19qtmxc1wwopz61d4p2j00eyie3e].[qr:Date:ok]</field>
            <field>[federated.19qtmxc1wwopz61d4p2j00eyie3e].[wd:Date:ok]</field>
            <field>[federated.19qtmxc1wwopz61d4p2j00eyie3e].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sankey'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[none:String:nk]&#10;[federated.19qtmxc1wwopz61d4p2j00eyie3e].[none:StringB:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.19qtmxc1wwopz61d4p2j00eyie3e].[usr:Calculation_1150177182302507017:qk:2]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19qtmxc1wwopz61d4p2j00eyie3e].[none:String:nk]</field>
            <field>[federated.19qtmxc1wwopz61d4p2j00eyie3e].[none:StringB:nk]</field>
            <field>[federated.19qtmxc1wwopz61d4p2j00eyie3e].[none:ToPad (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Benford' width='268'>
      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
    </thumbnail>
    <thumbnail height='384' name='Calendar' width='384'>
      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
      RO4J99Bc6LhLRCSkFAARkZBSAEREQkoBEBEJKQVARCSkFAARkZBSAEREQkoBEBEJKQVARCSk
      FAARkZBSAEREQkoBEBEJKQVARCSkFAARkZBSAEREQkoBEBEJKQVARCSkFAARkZBSAEREQkoB
      EBEJKQVARCSkFAARkZBSAEREQkoBEBEJKQVARCSkFAARkZBSAEREQkoBEBEJKQVARCSkFAAR
      kZBSAEREQkoBEBEJKQVARCSkFAARkZBSAEREQkoBEBEJKQVARCSkFAARkZBSAEREQkoBEBEJ
      KQVARCSkFAARkZBSAEREQkoBEBEJKQVARCSkFAARkZBSAEREQkoBEBEJKQVARCSkFAARkZBS
      AEREQkoBEBEJKQVARCSkFAARkZBSAEREQkoBEBEJKQVARCSkFAARkZBSAEREQkoBEBEJKQVA
      RCSkFAARkZBSAEREQkoBEBEJKQVARCSkFAARkZBSAEREQkoBEBEJKQVARCSkFAARkZBSAERE
      QkoBEBEJKQVARCSkFAARkZBSAEREQkoBEBEJKQVARCSk/n+FwJ7fC8UdjQAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='384' name='Navigation-Icon' width='384'>
      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
      Y5ubm+js7Iyp8UAggO7ubun3WFpaQldXF9xut9TW7Xaju7tb6kutxgOBgNTWbrejs7NT+tme
      pca13zVejXu9XnFM+12j2y4sLKC1tVU63tXVhcnJyZi209PT6OjokI5ZLBapNoD/faC5c+eO
      OBYIBOLW+ODgIO7fvy+OuVwutLe3Y319Pabt/fv3MTg4KI5ZrVZ0dHTAZrNJbcPhMO7cuYOJ
      iQnpunR2dsLpdEpttRqfn58Xx+bm5tDV1QWfzye1dTqd6OzslGpvfHwcPT090n0C+N9/f5E/
      m/a7Rl/b9fV1WCwWqZ7u3buHoaEh7O7uPn0ABAIBTE1NxT03OTkpvna73dIvHcntdksda7fb
      sby8rNs2+tzm5qZ0444UfW5lZQXb29u6baPPLS4uxoSKRnti00xPT8d0XuS5yMAZGxuL6bzI
      c5GdFXnDiBZ97mnbhsNhqVAjhUIh6Ubt8/kwMzOj29br9UrnnE5nzD+4yHORQWyz2WJCRWO1
      WqVzY2Njuu2A2N/5adtqN42naev3+2NCJfJcZP0/qcZdLpd0zm63xzw4xTv3pBrf2NiIqfHo
      UIk8F1nj2qdrPfPz89INYmpqKubBKfJcZODo3fw10df991XjkQ+QoVAobo1rr5E0Xq835sEp
      3rkn1bjD4Yip8ehQ0UTX+Pr6ekyoaNbW1qSHqqWlpZgHJ83i4qJ0bnZ2VgrmSNHnJicnEQwG
      ATzDLCCDwRDznjDyXOT7KG0ARI824KHRBir0RJ9LSkqKO8gYfe5JAzAmk0k6Zzab4w7ARJ+L
      N8Cmdy76HV2k6Pez0V8/6dzTft8n9Vn099EGD/VEn3tSnyUmJsb0mfYRPFr0uSf9XtHnfl9t
      I69XdG1Gir6W2mCcnuhzRqMx7jWIPvdNNR7ZNrqOI0Wfe9IgY/S5lJQU3QFR4PG1jDz3pLqN
      vu7PUuNP2zb63hNJ774Ur8+iz0XXcaT/l/79pj6Lvoc9S5/Fuy9FDxpH9u9TB4DJZMKJEyd0
      CyM5ORknTpwQX2dkZKCyslK3bVZWFiorK8XXeXl5KCsr0/1/FhQUSOeKi4tjBi41JSUl0oBP
      aWkpnnvuOd22ZWVl0oBPRUVFzKAO8LiAjh49Kr1/1xt80drW1NRIhVFXV6fb2QaDAXV1dVKn
      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
      YczPz4s/4vS0Na5NA41X49qW25HTQA8dOhS3xsfHxzEzMyOmgR48eFC3fz0eD0ZHR8U00IqK
      iifW+ODgoDQNNPIP4kTS/pqdNg20uro67vYdDodD/LGbjIwM1NbWxt2+Y2trS/xBp6ysLN1p
      nZqVlRUMDAyIaaDxtp0Jh8NYXFzE8PCwmAYavRGcRhsf4VYQRESK4lYQRESKYgAQESmKAUBE
      pCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESK
      YgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgG
      ABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQ
      ESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGR
      ohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmK
      AUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgA
      RESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBE
      pCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESK
      YgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgG
      ABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQ
      ESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGR
      ohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmK
      AUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgA
      RESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBE
      pCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESK
      YgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgG
      ABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQ
      ESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGR
      ohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmK
      AUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgA
      RESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBE
      pCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESK
      YgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgG
      ABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQ
      ESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGR
      ohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmK
      AUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgA
      RESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBE
      pCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESK
      YgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgG
      ABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQ
      ESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGR
      ohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmK
      AUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgARESKYgAQESmKAUBEpCgGABGRohgA
      RESK+h+T3jK/EuQFJwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Navigation-Text' width='384'>
      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
      3NcoXKkY9K77y218ojj4/2UgpHAIGbFPy2BxwmEkhGv+Xr/vlWWkcBhBVCCIwoDv79sOKoEg
      Dvp7A8YZal6+jPM18gJ9YxEGFIqh5IavN2b/P9ISIcL/10TcQCNEiBDhBiVyzxohQoQINyiR
      AhAhQoQINyiRAhAhQoQINyiRAhAhQoQINyiRAhAhQoQINyiRAhAhQoQINyiRAhAhQoQINyiR
      AhAhQoQINyiRAhAhQoQINyiRAhAhQoQINyiRAhAhQoQINyiRAhAhQoQINyiRAhAhQoQINyiR
      AhAhQoQINyiRAhAhQoQI/7e9OhAAAAAAEORvPcgl0ZQAAKYEADAlAIApAQBMCQBgSgAAUwIA
      mBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIAmBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIA
      mBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIAmBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIA
      mBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIAmBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIA
      mBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIAmBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIA
      mBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIAmBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIA
      mBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIAmBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIA
      mBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIAmBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIA
      mBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIAmBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIA
      mBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIAmBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIA
      mBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIAmBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIA
      mBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIAmBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIA
      mBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIAmBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIA
      mBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIAmBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIA
      mBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIAmBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIA
      mBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIAmBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIA
      mBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIAmBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIA
      mBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIAmBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIA
      mBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwIAmBIAwJQAAKYEADAlAIApAQBMCQBgSgAAUwEm
      0gNau+LM/QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Sankey' width='384'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
